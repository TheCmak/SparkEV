SimInput.TestData1='./datasets/61508004 Test Data.txt';
SimInput.TestData2='./datasets/61508006 Test Data.txt';
SimInput.TestData3='./datasets/61508007 Test Data.txt';
SimInput.TestData4='./datasets/61508008 Test Data.txt';
SimInput.TestData5='./datasets/61508009 Test Data.txt';
SimInput.TestData6='./datasets/61508010 Test Data.txt';
SimInput.TestData7='./datasets/61508011 Test Data.txt';
SimInput.TestData8='./datasets/61508013 Test Data.txt';
SimInput.TestData9='./datasets/61508014 Test Data.txt';
SimInput.TestData10='./datasets/61508015 Test Data.txt';
SimInput.TestData11='./datasets/61508016 Test Data.txt';
SimInput.TestData12='./datasets/61508017 Test Data.txt';
SimInput.TestData13='./datasets/61508018 Test Data.txt';
SimInput.TestData14='./datasets/61508019 Test Data.txt';
SimInput.TestData15='./datasets/61508020 Test Data.txt';
SimInput.TestData16='./datasets/61508021 Test Data.txt';
SimInput.TestData17='./datasets/61508022 Test Data.txt';
SimInput.TestData18='./datasets/61508024 Test Data.txt';
SimInput.TestData19='./datasets/61508025 Test Data.txt';
SimInput.TestData20='./datasets/61508026 Test Data.txt';
SimInput.TestData21='./datasets/61508027 Test Data.txt';

fields = fieldnames(SimInput);
toterrcur=[];
toterrvol=[];
toterrsoc=[];

%Prompt
%{
prompt = 'Which Drive Cycle Would You Want To Run 4,6,7,8,9,10,11,13,14,15,16   '; 
SimSetup.Selection = input(prompt);
%}

%Auto
for prompt=[10,13,15,16]
    
SimSetup.Selection=prompt;
switch SimSetup.Selection
	case 4
		SimSetup.TestDataFile = SimInput.TestData1;
	case 6
		SimSetup.TestDataFile = SimInput.TestData2;
	case 7
		SimSetup.TestDataFile = SimInput.TestData3;
	case 8
		SimSetup.TestDataFile = SimInput.TestData4;
	case 9
		SimSetup.TestDataFile = SimInput.TestData5;
	case 10
		SimSetup.TestDataFile = SimInput.TestData6;
	case 11
		SimSetup.TestDataFile = SimInput.TestData7;
	case 13
		SimSetup.TestDataFile = SimInput.TestData8;
	case 14
		SimSetup.TestDataFile = SimInput.TestData9;
	case 15
		SimSetup.TestDataFile = SimInput.TestData10;
	case 16
		SimSetup.TestDataFile = SimInput.TestData11;
	otherwise 
		print("try again")
end

%ROAD GRADE
if (SimSetup.TestDataFile == SimInput.TestData6)
	InputData.RoadGrade = 0.06;
else
	InputData.RoadGrade = 0;
end

%SAMPLE RATE
if (SimSetup.TestDataFile == SimInput.TestData4 | SimSetup.TestDataFile == SimInput.TestData5 | SimSetup.TestDataFile == SimInput.TestData6 | SimSetup.TestDataFile == SimInput.TestData7)
	InputData.SampleRate = 0.02;
else
	InputData.SampleRate = 0.1;
end

SimSetup.StepSize = InputData.SampleRate;

InputData.TestData = readtable(SimSetup.TestDataFile);
SimSetup.End = InputData.TestData.Time_sec_(end);

InputData.InitialHVSOC = InputData.TestData.HV_Battery_SOC___(1);

InputData.ExpectedHVSOC = [InputData.TestData.Time_sec_,InputData.TestData.HV_Battery_SOC___];
InputData.ExpectedVel = [InputData.TestData.Time_sec_,(InputData.TestData.Dyno_Speed_mph_.*(1.60934/3.6))];
InputData.ExpectedHVVolt = [InputData.TestData.Time_sec_,InputData.TestData.HV_Battery_Voltage_V_];
InputData.ExpectedHVCurr = [InputData.TestData.Time_sec_,InputData.TestData.HV_Battery_Current_A_];
InputData.ExpectedTracForce = [InputData.TestData.Time_sec_,InputData.TestData.Dyno_Tractive_Effort_N_];

Chassis.Driver=102; %kg
Chassis.Mass=2821*0.453592; %lb*kg
Chassis.RR=0.006;
Chassis.CD=0.326;
Chassis.FA=2.48;
Chassis.FrontDiameter=23.03*2.54/100; %in*cm/meter
Chassis.RearDiameter=23.48*2.54/100; %in*cm/meter
Chassis.FrontCirc=72.3*2.54/100; %in*cm/m
Chassis.RearCirc=73.6*2.54/100; %in*cm/m

Chassis.BrakeBiasPt=[0 0; 2.5 0.8; 12 0.95;18 0.95;20 0.95; 25 0.90; 28 0.65; 35 0];
x1=Chassis.BrakeBiasPt(:,1);
y1=Chassis.BrakeBiasPt(:,2);
Chassis.Brakefit=fit(x1,y1,'Poly7');

Chassis.BrakeLUT(:,1)=[0:1:31];
Chassis.BrakeLUT(:,2)=Chassis.Brakefit([0:1:31]);

Ptrain.enable=InputData.TestData.Time_sec_;
Ptrain.MaxTq=444; %Nm
Ptrain.MaxPw=105000; %W
Ptrain.Finaldrive=3.87;
Ptrain.BatCap=52*3600; %Amp Seconds

%Veh On
for j=1:size(InputData.TestData,1)
    if InputData.TestData.HV_Battery_Voltage_V_(j)<=10
        VehOn=0;
    else
        VehOn=1;
    end
    Ptrain.enable(j,2)=VehOn;
end


%SOC LUT GENERATION
Data=[0 0 0];
Count=numel(fields);

for i=1:1:Count
    LUTData = readtable(SimInput.(fields{i}));
    Scan=[LUTData.HV_Battery_SOC___ LUTData.HV_Battery_Voltage_V_ LUTData.HV_Battery_Current_A_];

    for x=size(Scan,1):-1:1
        checkvol=Scan(x,2);
        checkcur=Scan(x,3);
        if (checkvol>=250 && (checkcur<3 && checkcur>-1))==1
            Data=[Data; Scan(x,:)];
        end
    end

end

Data(1,:)=[];

f=fit(Data(:,1),Data(:,2),'exp2')

%{
MotEff LUT Processing 
Actual LUT generated by grabbing data with DataProc_eff, and processignwith MotEffLUT.m
%}

load('MotEff3.mat', 'fitresult');

[xq,yq]=meshgrid(0:10:500, -60:10:450);
SimData.MotEff=fitresult(xq,yq);

k=10;
K=(1/(k^2))*ones(k);
Zsmooth1=conv2(SimData.MotEff,K,'same');

Zsmooth1((1:k/2),:)=[];
Zsmooth1((size(Zsmooth1,1)-k/2+1):size(Zsmooth1,1),:)=[];
Zsmooth1(:, 1:k/2)=[];
Zsmooth1(:,(size(Zsmooth1,2)-k/2+1):size(Zsmooth1,2))=[];

Zsmooth1(isnan(Zsmooth1))=0.8;

%SIMULATION START
sim('untitled.slx');

%ERROR CALCULATION
scur=Outputcur.Data();
svol=Outputvolt.Data();
ssoc=Outputsoc.Data();

if (SimSetup.TestDataFile == SimInput.TestData4 | SimSetup.TestDataFile == SimInput.TestData5 | SimSetup.TestDataFile == SimInput.TestData6 | SimSetup.TestDataFile ==SimInput.TestData7)
    dcur=InputData.TestData.HV_Battery_Current_A_;
    for i=1:1:500
        dcur(1,:)=[];
    end
    dvol=InputData.TestData.HV_Battery_Voltage_V_;
    for i=1:1:500
        dvol(1,:)=[];
    end
    dsoc=InputData.TestData.HV_Battery_SOC___;
    for i=1:1:500
        dsoc(1,:)=[];
    end
else
       dcur=InputData.TestData.HV_Battery_Current_A_;
    for i=1:1:101
        dcur(1,:)=[];
    end
    dvol=InputData.TestData.HV_Battery_Voltage_V_;
    for i=1:1:101
        dvol(1,:)=[];
    end
    dsoc=InputData.TestData.HV_Battery_SOC___;
    for i=1:1:101
        dsoc(1,:)=[];
    end
end
    

delcur=dcur-scur;
delvol=dvol-svol;
delsoc=dsoc-ssoc;
errcur=sqrt(sum(delcur.^2)/Outputcur.length())
errvol=sqrt(sum(delvol.^2)/Outputcur.length())
errsoc=sqrt(sum(delsoc.^2)/Outputcur.length())

toterrcur=[toterrcur; errcur]
toterrvol=[toterrvol; errvol]
toterrsoc=[toterrsoc; errsoc]

end

RMSEcur=mean(toterrcur)
RMSEvol=mean(toterrvol)
RMSEsoc=mean(toterrsoc)
