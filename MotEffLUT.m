function [fitresult, gof] = createFit(Spd, Tq, LumpedEff)
%CREATEFIT(SPD,TQ,LUMPEDEFF)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : Spd
%      Y Input : Tq
%      Z Output: LumpedEff
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 20-Feb-2018 16:44:27


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( Spd, Tq, LumpedEff );

% Set up fittype and options.
ft = 'linearinterp';
excludedPoints = excludedata( xData, yData, 'Indices', [626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 10618 10619 10620 10621 10622 10623 10624 10625 10626 10627 10628 10629 10630 10631 10632 10633 10634 10635 10636 10637 10638 10639 10640 10641 10642 10643 10644 10645 20767 20768 20769 20770 20771 20772 20773 20774 20775 20776 20777 20778 20779 20780 20781 20782 20783 20784 20785 20786 20787 20788 20789 20790 20791 20792 20793 20794 20795 20796 20797 20798 20799 20800 20801 20802 20803 20804 20805 20806 20807 20808 20809 20810 20811 20812 20813 20814 20815 20816 20817 20818 20819 20820 20821 20822 20823 20824 20825 20826 20827 20828 20829 20830 20831 20832 20833 20834 20835 20836 20837 20838 20839 20840 20841 20842 20843 20844 20845 20846 20847 20848 20849 20850 20851 20852 20853 20854 20855 20856 20857 35597 35598 35599 35600 35793 35794 35795 35796 35940 36158 36159 36160 36161 39277 39278 39279 39280 39281 39282 39283 39284 39285 39286 39287 39288 39289 39290 39291 39292 39293 39294 39295 39296 39297 39298 39299 39807 39808 39809 41067 41068 41069 41070 41437 41438 41439 41440 41855 41856 41857 41858 41859 41860 41888 41889 41890 41891 41892 41893 41894 41983 41984 41985 41986 41987 41988 41989 41990 42378 42379 42380 42622 42623 42624 42960 42961 42962 42963 42964 43471 43472 43473 43474 43837 43838 43839 43840 45151 45152 45153 45154 45155 45156 45157 45158 45159 45160 45161 45162 45175 45176 45177 45178 45179 45390 45391 45392 45393 45726 45727 45728 45729 45730 46177 46178 46179 46180 46181 46698 46699 46700 47058 47059 47060 47061 47062 47655 47656 47657 47658 47851 47852 47853 48337 48338 48339 49901 49902 49903 56781 56782 56783 56784 56785 56786 56787 56788 56789 56790 56791 56792 63713 63714 63715 64096 64097 64098 64099 64100 64545 64546 64547 64548 64549 64550 64551 64552 64553 64554 64555 64556 64652 64653 64654 64655 64656 64657 64658 64659 64660 65038 65039 65284 65285 65286 65287 65674 65675 65676 65677 65678 65679 65680 65681 65682 65683 66209 66210 66211 66212 66588 66589 66590 67942 67943 67944 67945 67946 67947 67948 67949 67950 67951 67952 67953 67954 67955 67956 67967 67968 68186 68187 68188 68189 68190 68191 68192 68193 68194 68195 68196 68197 68198 68527 68528 68529 68530 68531 68532 68533 68534 68990 68991 68992 69527 69528 69529 69883 69884 69885 69886 69887 69888 70494 70495 70496 70497 70688 70689 70690 70691 70692 71170 71171 71172 71173 71174 72772 72773 72774 72775 73977 73978 73979 74172 74173 74174 74175 74318 74540 74541 74542 77612 77613 77614 77615 77616 77617 77618 77619 77620 77621 78111 78112 78113 78114 79364 79365 84786 84787 84788 84789 85171 85172 85173 85719 85720 85721 85722 85723 85724 86103 86104 86105 86352 86353 86354 86355 86356 86748 86749 86750 86751 86752 86753 86754 87275 87276 87277 87667 87668 87669 89005 89006 89007 89008 89009 89010 89011 89024 89025 89240 89241 89242 89243 89244 89245 89246 89247 89248 89588 89589 89590 89591 89592 89593 89594 89595 90037 90038 90039 90040 90539 90540 90541 90900 90901 90902 90903 91489 91490 91491 91681 91682 92170 92171 92172 93769 93770 93771 100547 100548 100549 100550 100551 100552 100553 100554 100555 100556 100557 100558 107576 107577 107578 107579 107957 107958 107959 108401 108402 108403 108404 108405 108406 108407 108408 108409 108410 108411 108501 108502 108503 108504 108505 108506 108507 108879 108880 108881 109125 109126 109503 109504 109505 109506 109507 109508 110046 110047 110048 110049 110458 110459 110460 111825 111826 111827 111828 111829 111830 111831 111832 111833 111834 111835 111848 111849 111850 111851 112072 112073 112074 112075 112406 112407 112408 112409 112410 112411 112412 112413 112854 112855 112856 112857 113363 113364 113365 113728 113729 113730 114335 114336 114337 114338 114534 114535 114536 115004 115005 115006 116585 116586 117832 117833 124165 124166 124167 124168 124169 124362 124363 124364 124365 124366 124367 124368 124520 124521 124522 124523 124524 124525 124744 124746 124747 124748 124749 124750 127876 127877 127878 127879 127880 127881 127882 127883 127884 127885 127886 127887 127888 127889 127890 127891 127892 127893 127894 127895 127896 127897 127898 127899 127900 127901 127902 127903 128420 128421 128422 128423 128424 128425 129670 129671 129672 129673 129674 129675 129676 129677 130062 130063 130064 130065 130066 130067 130068 130502 130503 130504 130509 130608 130609 130610 130611 130612 130613 130614 130615 130616 130617 131032 131033 131034 131035 131036 131037 131287 131288 131289 131290 131291 131672 131673 131674 131675 131676 131677 131678 131679 131680 131681 131682 131683 131684 131685 132241 132242 132243 132244 132245 132246 132247 132677 132678 132679 132680 132681 132682 134065 134066 134067 134068 134069 134070 134071 134072 134073 134074 134075 134076 134077 134078 134079 134085 134086 134087 134088 134089 134090 134091 134317 134318 134319 134320 134321 134322 134323 134324 134325 134326 134327 134328 134329 134330 134331 134332 134333 134650 134651 134652 134653 134654 134655 134656 134657 134658 134659 134660 134661 134662 134663 134664 135114 135115 135116 135117 135118 135119 135120 135664 135665 135666 135667 135668 135669 136035 136036 136037 136038 136039 136040 136041 136657 136658 136659 136660 136661 136662 136863 136864 136865 136866 136867 136868 137346 137347 137348 137349 137350 137351 137352 138942 138943 138944 138945 138946 138947 138948 138949 138950 138951 138952 138953 145869 145870 145871 145872 145873 145874 145875 145876 145877 145878 145879 145880 145881 145882 145883 145884 145885 145886 152923 152924 152925 152926 152927 152928 152929 152930 153309 153310 153311 153312 153313 153314 153315 153316 153860 153861 153862 153863 153864 153865 153866 153867 153868 153869 153870 153871 153872 153873 153874 153875 153876 153877 154265 154266 154267 154268 154269 154270 154513 154514 154515 154516 154517 154518 154907 154908 154909 154910 154911 154912 154913 154914 154915 154916 154917 154918 154919 154920 154921 154922 154923 154924 155473 155474 155475 155476 155477 155478 155923 155924 155925 155926 155927 155928 157350 157351 157352 157353 157354 157355 157356 157357 157358 157359 157360 157361 157362 157377 157378 157379 157380 157381 157382 157599 157600 157601 157602 157603 157604 157605 157606 157607 157608 157609 157610 157611 157612 157613 157614 157615 157616 157617 157618 157619 157620 157952 157953 157954 157955 157956 157957 157958 157959 157960 157961 157962 157963 157964 157965 158425 158426 158427 158428 158429 158430 158431 158985 158986 158987 158988 158989 158990 158991 159355 159356 159357 159358 159359 159360 159361 159362 159952 159953 159954 159955 159956 159957 159958 160157 160158 160159 160160 160161 160162 160163 160164 160650 160651 160652 160653 160654 160655 160656 160657 160658 160659 162210 162211 162212 162213 162214 162215 162216 162217 162218] );
opts = fitoptions( 'Method', 'LinearInterpolant' );
opts.Normalize = 'on';
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Make contour plot.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, [xData, yData], zData, 'Style', 'Contour', 'Exclude', excludedPoints );
legend( h, 'untitled fit 1', 'LumpedEff vs. Spd, Tq', 'Excluded LumpedEff vs. Spd, Tq', 'Location', 'NorthEast' );
% Label axes
xlabel Spd
ylabel Tq
grid on


